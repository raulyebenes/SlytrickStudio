
var velY = -1;
class Escena2 extends Phaser.Scene{
    constructor() {
        super("juego");
        
    }
    
    preload(){
        this.load.image("fondo", "assets/ventana.png");
        this.load.image("plataforma", "assets/plataforma.png");
        this.load.image("plat_muelle", "assets/plat_muelle.png");
        this.load.image("plat_pegajoso", "assets/plat_pegajoso.png");
        this.load.image("plat_pinchos", "assets/plat_pinchos.png");
        this.load.image("cubo", "assets/cubo.png");
    }
    
    create() {
        
             
        this.background = this.add.tileSprite(0,0, config.width,
                config.height, "fondo");
        this.background.setOrigin(0,0);
        
        this.add.text(20, 20, "Probando cositas guapis", {font:"25px Arial Black", fill: "black"});
        
        cubo = this.physics.add.sprite(50, 80, "cubo");
        cubo.setCollideWorldBounds(true);
        
        this.cursors = this.input.keyboard.createCursorKeys();
        
        //plat = this.physics.add.staticGroup();
        
        plat = this.physics.add.image(carril[2], 500, 'plataforma')
            .setImmovable(true)
            .setVelocity(0, 0);
        plat.body.setAllowGravity(false);
        
        plataf = this.physics.add.group();
        plataf.create(carril[0], 151, "plataforma");
        plataf.create(carril[1], 400, "plataforma");
        plataf.create(carril[2], 400, "plataforma");

        plataf.children.iterate(function (child) {
            child.body.setAllowGravity(false);
            child.body.setImmovable(true);
            child.setVelocity(0,-30);
        });
        
        destruir =  this.physics.add.image(carril[2], 200, 'plat_pegajoso')
            .setImmovable(true)
        destruir.body.setAllowGravity(false);
        
        //plat.create(carril[0], 151,  "plataforma");
        //plat.create(carril[1], 231,  "plataforma");
        //plat.create(carril[2], 231,  "plataforma");
        
        this.physics.add.collider(cubo, plat);
        this.physics.add.collider(cubo, plataf);
        this.physics.add.overlap(plataf, destruir, eliminar(), null, this);
        
    }
               
    update() {
        this.background.tilePositionY += 0;
        if(vel <= 10) {
            vel += 0.01;
        }
        /* plataf.children.iterate(function (child) {
            child.setVelocity(0,velY);
        });
        velY--;*/
        cuboX = cubo.x;
        cuboY = cubo.y;
        if(flipflop){
            if (this.cursors.left.isDown){
                    flipflop = false;
                    lastPress= true;
                    if(cubo.x > 50){
                        nuevaX = cuboX-80;
                        cubo.setVelocityX(-1000);
                    }
            }else if (this.cursors.right.isDown){
                    flipflop = false;
                    lastPress= false;
                    if(cubo.x < 450){
                        nuevaX = cuboX+80;
                        cubo.setVelocityX(1000);
                    }
            }
        }
        if(lastPress){
                if(nuevaX >= cuboX){
                    cubo.setVelocityX(0);
                    cubo.x = nuevaX;
                }
        }
        if(!lastPress) {
            if(nuevaX <= cuboX){
                cubo.setVelocityX(0);
                cubo.x = nuevaX;
            }
        }
        if(this.cursors.right.isUp && this.cursors.left.isUp){
            flipflop=true;
        } 
    }
    
}

function eliminar(){
    
}

function crearPlataforma(){
        randomPlat = Math.floor((Math.random() * 5));
        
        switch(randomPlat){
            case 0:
                plataf.create(carril[0], 151, "plataforma");
                plataf.create(carril[1], 800, "plataforma");
                plataf.create(carril[2], 800, "plataforma");
        }
}
